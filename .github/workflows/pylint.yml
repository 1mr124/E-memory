name: Pylint Quality Check # i added the --disable=C0103 to ignore the convention checks till we are good with everything first  

run-name: Deploy by @${{ github.actor }}

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the current branch's code
    - uses: actions/checkout@v4

    # Step 2: Set up Python environment
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # Step 3: Install dependencies including pylint
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    # Step 4: Run Pylint on the current branch
    - name: Run Pylint on current branch
      id: pylint_current
      run: |
        pylint . --enable=W --disable=C0103 | tee pylint_output.txt
        pylint_score=$(grep "Your code has been rated" pylint_output.txt | tail -1 | awk '{print $7}' | sed 's/\/.*//')
        echo "Pylint score on current branch: $pylint_score"
        echo "current_score=$pylint_score" >> $GITHUB_ENV

    # Step 5: Check out the main branch for comparison
    - name: Checkout main branch
      run: |
        git fetch origin main
        git checkout main

    # Step 6: Run Pylint on the main branch
    - name: Run Pylint on main branch
      id: pylint_master
      run: |
        pylint_score=$(pylint . --enable=W --disable=C0103 | grep "Your code has been rated" | tail -1 | awk '{print $7}' | sed 's/\/.*//')
        echo "Pylint score on main branch: $pylint_score"
        echo "master_score=$pylint_score" >> $GITHUB_ENV

    # Step 7: Compare the Pylint scores between the current branch and main branch
    - name: Compare Pylint scores
      run: |
        echo "Current branch Pylint score: ${{ env.current_score }}"
        echo "Main branch Pylint score: ${{ env.master_score }}"
        if (( $(echo "${{ env.current_score }} < ${{ env.master_score }}" | bc -l) )); then
          echo "Pylint score decreased! Please check the code quality."
          exit 1
        else
          echo "Pylint score is good or has improved."
        fi
