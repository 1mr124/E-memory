name: Update Pylint Score

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code
    - uses: actions/checkout@v2

    # Step 2: Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    # Step 4: Run Pylint on current branch and capture score
    - name: Run Pylint on current branch
      id: pylint_current
      run: |
        pylint . --enable=W | tee pylint_output.txt
        pylint_score=$(grep "Your code has been rated" pylint_output.txt | tail -1 | awk '{print $7}' | sed 's/\/.*//')
        echo "Pylint score: $pylint_score"
        echo "score=$pylint_score" >> $GITHUB_ENV

    # Step 5: Clean up pylint output
    - name: Remove pylint_output.txt (cleanup)
      run: |
        rm pylint_output.txt

    # Step 6: Commit changes and push to a new branch
    - name: Commit changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b update-readme-pylint-score
        echo "Pylint score: $score" >> README.md
        git add README.md
        echo "Score to commit: $score"
        echo "Contents of README after update:"
        cat README.md
        if ! git diff-index --quiet HEAD --; then
          git commit -m "Update pylint score in README to $score"
          git push origin update-readme-pylint-score
        else
          echo "No changes to commit."
        fi

    # Step 7: Create pull request
    - name: Create pull request
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        branch: update-readme-pylint-score
        base: main
        title: "Update pylint score in README"
        body: "This pull request updates the pylint score in the README file."

    # Step 8: Merge pull request
    - name: Merge pull request
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add this line
      run: |
        pr_number=$(gh pr list --state open --json number,title,body --jq '.[] | select(.title | contains("Update pylint score in README") or .body | contains("Update pylint score in README")) | .number')
        if [ -n "$pr_number" ]; then
          gh pr merge "$pr_number" --merge
        else
          echo "No pull request found to merge."
        fi
    - name: Delete branch
      run: |
        git push origin --delete update-readme-pylint-score
