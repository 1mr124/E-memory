name: Update Pylint Score

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code
    - uses: actions/checkout@v2

    # Step 2: Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    # Step 4: Run Pylint on current branch and capture score
    - name: Run Pylint on current branch
      id: pylint_current
      run: |
        pylint . --enable=W --disable=C0103 | tee pylint_output.txt
        pylint_score=$(grep "Your code has been rated" pylint_output.txt | tail -1 | awk '{print $7}' | sed 's/\/.*//')
        echo "Pylint score: $pylint_score"
        echo "score=$pylint_score" >> $GITHUB_ENV

    # Step 5: Clean up pylint output
    - name: Remove pylint_output.txt (cleanup)
      run: |
        rm pylint_output.txt

    # Step 6: Commit changes and push to a new branch
    - name: Commit changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git checkout main
        sed -i "s/pylint score: [0-9\.]*/pylint score: $score/g" README.md
        git add README.md
        echo "Score to commit: $score"
        echo "Contents of README after update:"
        cat README.md
        if ! git diff-index --quiet HEAD --; then
          git commit -m "Update pylint score in README to $score"
          git push origin main
        else
          echo "No changes to commit."
        fi
